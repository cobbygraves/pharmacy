{"version":3,"sources":["components/Drug.js","store/Actions.js","store/ActionCreators.js","config.js","components/RecieptItem.js","components/Reciept/Reciept.js","components/NavigationBar.js","components/SoldItems.js","custom-hooks/useDataFetching.js","components/Modal.js","components/Home.js","components/DrugDetails.js","components/AdminBar.js","components/Admin.js","components/Spinner/Spinner.js","components/SalesLogin.js","components/AdminLogin.js","components/SnackBar.js","App.js","index.js","store/reducers/Reducers.js"],"names":["useStyles","makeStyles","root","position","cursor","props","stocked","drugname","color","priceStyle","left","height","fontSize","background","boxShadow","Drug","classes","TableRow","className","onClick","drugInfo","TableCell","align","colSpan","Typography","variant","drugName","drugPrice","SHOW_SNACKBAR","SHOW_MODAL","showSnackBar","isOpen","message","type","dispatch","showSnack","messageSnack","typeSnack","showModal","id","drug","openModal","drugId","HOSTURL","inputStyle","width","textAlign","RecieptItem","useState","quantity","setQuantity","acceptQty","setAcceptQty","useDispatch","bindActionCreators","actionCreators","nameStyle","name","IconButton","disabled","removeDrug","style","value","onChange","event","target","axios","get","then","resp","data","amount","price","addAmount","catch","err","console","log","toFixed","container","maxHeight","Reciept","TableContainer","cartItems","map","item","amt","qty","removeItem","theme","flexGrow","marginBottom","backgroundColor","breakpoints","up","display","down","menuButton","marginRight","spacing","buttonActions","search","borderRadius","shape","alpha","palette","common","white","marginLeft","inputRoot","inputInput","padding","paddingLeft","transition","transitions","create","NavigationBar","history","useHistory","AppBar","Toolbar","edge","fontWeight","Button","push","table","minWidth","headerStyle","containerStyle","marginTop","drugRow","SoldItems","component","Paper","Table","TableHead","TableBody","drugSold","scope","Math","random","useFetchData","dataURL","setData","getData","useCallback","res","useEffect","Modal","useSelector","state","modal","open","handleClose","content","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","addDrug","autoFocus","ReactDOM","createPortal","document","getElementById","drugStockGrid","logo","card","totalCartCost","hrStyle","border","cartItemGrid","secondHr","cartItemTitle","cartCostDiv","bottom","StyledTableCell","withStyles","head","black","body","Home","drugsArray","setDrugsArray","lookFor","setLookFor","cartDrugs","setCartDrugs","dailyDrugs","setDailyDrugs","showDailyDrugs","setShowDailyDrugs","showDaily","setShowDaily","totalCost","setTotalCost","totalSales","setTotalSales","amountArray","setAmountArray","updateDrugsArray","drugIndex","findIndex","drugArrayItem","drugWithIndex","qtySold","sold","qtyLeft","newDrugWithIndex","parseFloat","newDrugsArray","forEach","sales","drugs","dailyDrugsArray","put","find","eachDrug","prevSales","newDailyDrugs","filter","Grid","md","Input","placeholder","inputProps","length","Card","stickyHeader","sort","a","b","toLowerCase","includes","some","cartItem","newDrug","newCartDrugs","concat","addDrugHandler","updatedDrug","response","updateDrugHandler","updatedAmountArray","size","fullWidth","index","uuidv4","unshift","newFullDailyDrugs","justifyContent","margin","formDiv","stockButton","top","DrugDetails","noValidate","autoComplete","onSubmit","submitStock","TextField","label","InputLabelProps","shrink","changeName","changePrice","expiry","changeExpiry","changeStocked","changeSold","changeLeft","newStock","AdminBar","addStock","drugDetailGrid","drugDetailTitle","Admin","useDataFetching","setNewStock","setDrugId","setName","setPrice","setExpiry","qtyStocked","setQtyStocked","setQtySold","setQtyLeft","getDrugDetails","preventDefault","trim","post","Spinner","formStyle","flexDirection","alignItems","administratorButton","textDecoration","textTransform","LoginUser","loginRef","useRef","username","setUsername","password","setPassword","raised","loginDetails","loginError","showSpinner","ref","salesButton","loginAdminError","setLoginAdminError","setShowSpinner","pass","loginAdmin","verification","error","adminLoginHandler","SnackBar","snackBar","reason","Snackbar","autoHideDuration","Alert","severity","App","salesLogin","setSalesLogin","loginSalesError","setLoginSalesError","path","exact","SalesLogin","loginSales","AdminLogin","to","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","render"],"mappings":"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","file":"static/js/main.32bbb101.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    // border: \"1px solid gray\",\n    cursor: (props) => (props.stocked ? \"pointer\" : \"default\"),\n    \"& :hover\": {\n      // background: \"gray\",\n      // color: \"white\",\n      // boxShadow: \"0px 4px 5px black\",\n    },\n  },\n\n  drugname: {\n    color: (props) => (props.stocked ? \"black\" : \"red\"),\n  },\n  priceStyle: {\n    position: \"relative\",\n    left: \"60%\",\n    // top: 10,\n    height: \"100%\",\n    color: (props) => (props.stocked ? \"black\" : \"red\"),\n    fontSize: 18.5,\n    \"&:hover\": {\n      background: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n});\n\nconst Drug = (props) => {\n  const classes = useStyles(props);\n  return (\n    <TableRow className={classes.root} onClick={props.drugInfo}>\n      <TableCell align=\"left\" colSpan={1}>\n        <Typography variant=\"h5\" className={classes.drugname}>\n          {props.drugName}{\" \"}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"left\" colSpan={1}>\n        <Typography variant=\"h6\">\n          <span className={classes.priceStyle}>{props.drugPrice}</span>{\" \"}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Drug;\n","export const SHOW_SNACKBAR = \"SHOW_SNACKBAR\";\nexport const SHOW_MODAL = \"SHOW_MODAL\";\n","import { SHOW_SNACKBAR, SHOW_MODAL } from \"./Actions\";\n\nexport const showSnackBar = (isOpen, message, type) => (dispatch) =>\n  dispatch({\n    type: SHOW_SNACKBAR,\n    showSnack: isOpen,\n    messageSnack: message,\n    typeSnack: type,\n  });\n\nexport const showModal = (isOpen, id, drug) => (dispatch) =>\n  dispatch({\n    type: SHOW_MODAL,\n    openModal: isOpen,\n    drugId: id,\n    drugName: drug,\n  });\n","// const HOSTURL = \"http://localhost:5000\";\r\nconst HOSTURL = \"https://kind-blue-xerus-cape.cyclic.app\";\r\n\r\nexport default HOSTURL;\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport * as actionCreators from \"../store/ActionCreators\";\nimport HOSTURL from \"../config\";\n\nconst useStyles = makeStyles({\n  inputStyle: {\n    width: \"25%\",\n    height: 45,\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n});\n\nconst RecieptItem = (props) => {\n  const classes = useStyles();\n\n  const [quantity, setQuantity] = useState(1);\n  const [acceptQty, setAcceptQty] = useState(false);\n\n  const dispatch = useDispatch();\n  const { showSnackBar } = bindActionCreators(actionCreators, dispatch);\n\n  const acceptItem = () => {\n    axios\n      .get(`${HOSTURL}/drug/${props.id}`)\n      .then((resp) => {\n        const drug = resp.data;\n        if (drug.left < quantity) {\n          return showSnackBar(\n            true,\n            `Only ${drug.left} ${drug.name} in Stock`,\n            \"error\"\n          );\n        } else {\n          const amount = quantity * props.price;\n          props.addAmount(amount, quantity);\n          setAcceptQty(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  const quantityHandler = (event) => {\n    setQuantity(event.target.value);\n  };\n\n  return (\n    <>\n      <tr>\n        <td data-label=\"Name\" className={classes.nameStyle}>\n          {props.name}\n        </td>\n        {/* <td data-label=\"Quantity\">{props.quantity}</td> */}\n        <td data-label=\"Quantity\">\n          <IconButton\n            aria-label=\"cancel\"\n            disabled={acceptQty}\n            onClick={props.removeDrug}\n          >\n            <CancelIcon style={{ color: acceptQty ? \"gray\" : \"red\" }} />\n          </IconButton>\n          <input\n            type=\"text\"\n            className={classes.inputStyle}\n            value={quantity}\n            onChange={quantityHandler}\n            disabled={acceptQty}\n          />\n          <IconButton\n            aria-label=\"add\"\n            disabled={acceptQty}\n            onClick={acceptItem}\n          >\n            <CheckBoxIcon style={{ color: acceptQty ? \"gray\" : \"green\" }} />\n          </IconButton>\n        </td>\n        <td data-label=\"Price\">{props.price.toFixed(2)}</td>\n        <td data-label=\"Amount\">{(quantity * props.price).toFixed(2)}</td>\n      </tr>\n    </>\n  );\n};\n\nexport default RecieptItem;\n","import React from \"react\";\nimport \"./Reciept.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RecieptItem from \"../RecieptItem\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nconst useStyles = makeStyles({\n  container: {\n    maxHeight: 300,\n  },\n});\n\nconst Reciept = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <TableContainer className={classes.container}>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Quantity</th>\n              <th>Price</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.cartItems.map((item) => (\n              <RecieptItem\n                key={item.id}\n                name={item.name}\n                addAmount={(amt, qty) => props.addAmount(item.id, amt, qty)}\n                price={item.price}\n                id={item.id}\n                removeDrug={() => props.removeItem(item.id)}\n              />\n            ))}\n          </tbody>\n        </table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Reciept;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    flexGrow: 1,\n    marginBottom: 20,\n    \"& .MuiAppBar-root\": {\n      backgroundColor: \"black\",\n    },\n\n    \"& .MuiSvgIcon-root\": {\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n\n    \"& img\": {\n      position: \"relative\",\n      left: -10,\n      [theme.breakpoints.down(\"xs\")]: {\n        display: \"none\",\n      },\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  buttonActions: {\n    color: \"white\",\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"75%\",\n    },\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst NavigationBar = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const logoutSales = () => {\n    history.push(\"/\");\n  };\n\n  const loginAdmin = () => {\n    history.push(\"/admin/login\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bolder\" }}>\n              RUDIA CHEMICALS\n            </Typography>\n          </IconButton>\n          <div style={{ flexGrow: 1 }}></div>\n          <Button\n            variant=\"outlined\"\n            className={classes.buttonActions}\n            onClick={loginAdmin}\n          >\n            {\" \"}\n            Admin\n          </Button>\n\n          {\n            <Button\n              className={classes.buttonActions}\n              variant=\"outlined\"\n              onClick={logoutSales}\n            >\n              Logout\n            </Button>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 450,\n  },\n  headerStyle: {\n    color: \"white\",\n    background: \"black\",\n    fontWeight: \"bolder\",\n  },\n  containerStyle: {\n    // width: \"60%\",\n    marginLeft: 85,\n    marginRight: 85,\n    marginTop: 25,\n  },\n\n  drugRow: {\n    // \"& :hover\": {\n\n    // }\n    cursor: \"pointer\",\n  },\n});\n\nconst SoldItems = (props) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper} className={classes.containerStyle}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.headerStyle}>Name</TableCell>\n            <TableCell align=\"right\" className={classes.headerStyle}>\n              Price\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.drugSold.map((drug) => {\n            return (\n              <TableRow\n                key={drug.id + Math.random()}\n                className={classes.drugRow}\n                onClick={() => props.showModal(drug.id, drug.name)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {drug.name}\n                </TableCell>\n                <TableCell align=\"right\">{drug.price}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default SoldItems;\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetchData = (dataURL) => {\r\n  const [data, setData] = useState([]);\r\n  const getData = useCallback(() => {\r\n    axios\r\n      .get(dataURL)\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [dataURL]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return [data, setData];\r\n};\r\n\r\nexport default useFetchData;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actionCreators from \"../store/ActionCreators\";\r\n\r\nconst Modal = (props) => {\r\n  const { open, name } = useSelector((state) => state.modal);\r\n  const dispatch = useDispatch();\r\n  const { showModal } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     showModal(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    showModal(false, \"\");\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"WARNING\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {`Do you want to add ${name} back to shelf?`}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.addDrug} color=\"primary\" autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal\"));\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport Drug from \"./Drug\";\nimport Reciept from \"./Reciept/Reciept\";\nimport NavigationBar from \"./NavigationBar\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport SoldItems from \"./SoldItems\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useFetchData from \"../custom-hooks/useDataFetching\";\nimport Modal from \"./Modal\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport HOSTURL from \"../config\";\nimport { Card, Grid, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport * as actionCreators from \"../store/ActionCreators\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: \"100%\",\n    \"& .MuiTableCell-head\": {\n      backgroundColor: \"black\",\n    },\n  },\n  container: {\n    maxHeight: 345,\n  },\n\n  search: {\n    height: 45,\n    width: \"99%\",\n    fontSize: 25,\n    marginTop: 15,\n    paddingLeft: 15,\n  },\n\n  drugStockGrid: {\n    background: \"#ccc\",\n    padding: 15,\n  },\n  logo: {\n    fontSize: 25,\n    fontWeight: \"bolder\",\n    textAlign: \"center\",\n  },\n  card: {\n    marginTop: 25,\n  },\n\n  totalCartCost: {\n    color: \"GrayText\",\n    textAlign: \"center\",\n    marginBottom: 15,\n  },\n\n  hrStyle: {\n    border: \"1px solid black\",\n    width: \"85%\",\n  },\n  cartItemGrid: {\n    position: \"relative\",\n\n    padding: 10,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n  secondHr: {\n    border: \"1px solid black\",\n    width: \"100%\",\n    marginTop: 25,\n  },\n  cartItemTitle: {\n    fontSize: 25,\n    fontWeight: \"bolder\",\n    textAlign: \"center\",\n  },\n  cartCostDiv: {\n    position: \"sticky\",\n    marginTop: 45,\n    left: \"30%\",\n    bottom: 15,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    fontWeight: \"bold\",\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst Home = () => {\n  const classes = useStyles();\n\n  const [drugsArray, setDrugsArray] = useFetchData(`${HOSTURL}/drug`);\n\n  const dispatch = useDispatch();\n  const { showModal } = bindActionCreators(actionCreators, dispatch);\n  const { id } = useSelector((state) => state.modal);\n\n  const [lookFor, setLookFor] = useState(\"\");\n  // const [drugsArray, setDrugsArray] = useState([]);\n  const [cartDrugs, setCartDrugs] = useState([]);\n  const [dailyDrugs, setDailyDrugs] = useState([]);\n  const [showDailyDrugs, setShowDailyDrugs] = useState(false);\n  const [showDaily, setShowDaily] = useState(false);\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalSales, setTotalSales] = useState(0);\n\n  const [amountArray, setAmountArray] = useState([]);\n\n  //callback function to update drug in the database\n\n  const updateDrugHandler = (drugId, quantity) => {\n    const drug = drugsArray.find((eachDrug) => eachDrug.id === drugId);\n\n    const qtySold = drug.sold;\n    const qtyLeft = drug.left;\n\n    const newDrug = {\n      ...drug,\n      sold: qtySold + parseFloat(quantity),\n      left: qtyLeft - parseFloat(quantity),\n    };\n\n    //make an axios put request to the database to get the updated drug from the server\n    axios\n      .put(`${HOSTURL}/drug/update`, newDrug)\n      .then((resp) => {\n        const updatedDrug = resp.data;\n        updateDrugsArray(updatedDrug); // updating drugs array at client side\n      })\n      .catch((err) => {\n        console.log(err.response.message);\n      });\n  };\n\n  //callback function to update drugArray at the client side\n\n  const updateDrugsArray = (drug, quantity) => {\n    const drugIndex = drugsArray.findIndex(\n      (drugArrayItem) => drugArrayItem.id === drug.id\n    );\n    const drugWithIndex = drugsArray[drugIndex];\n    const qtySold = drugWithIndex.sold;\n    const qtyLeft = drugWithIndex.left;\n    const newDrugWithIndex = {\n      ...drugWithIndex,\n\n      sold: qtySold + parseFloat(quantity),\n      left: qtyLeft - parseFloat(quantity),\n    };\n    const newDrugsArray = [...drugsArray];\n    newDrugsArray[drugIndex] = newDrugWithIndex;\n    setDrugsArray(newDrugsArray);\n  };\n\n  //callback function to add updated drug to the array of cart items\n  const addDrugHandler = (drug) => {\n    if (cartDrugs.length > 0) {\n      const drugExist = cartDrugs.some((cartItem) => cartItem.id === drug.id);\n      if (drugExist) {\n        return;\n      } else {\n        const newDrug = {\n          id: drug.id,\n          name: drug.name,\n          price: drug.price,\n          quantity: 1,\n        };\n        const newCartDrugs = [...cartDrugs];\n        setCartDrugs(newCartDrugs.concat(newDrug));\n      }\n    } else {\n      const newDrug = {\n        id: drug.id,\n        name: drug.name,\n        price: drug.price,\n        quantity: 1,\n      };\n      setCartDrugs(cartDrugs.concat(newDrug));\n    }\n  };\n\n  const paymentHandler = () => {\n    //logic to add items in cart to daily sales\n    if (cartDrugs.length > 0) {\n      setTotalSales((prevSales) => prevSales + totalCost);\n      const newCartDrugs = [...cartDrugs];\n      const newDailyDrugs = [];\n      newCartDrugs.forEach((eachDrug) => {\n        for (let index = 0; index < eachDrug.quantity; index++) {\n          const drug = { ...eachDrug, id: uuidv4() };\n          newDailyDrugs.unshift(drug);\n        }\n        const fullDailyDrugs = [...dailyDrugs];\n        const newFullDailyDrugs = fullDailyDrugs.concat(newDailyDrugs);\n        setDailyDrugs(newFullDailyDrugs);\n      });\n    }\n    setCartDrugs([]);\n    setAmountArray([]);\n    setShowDaily(true);\n  };\n\n  //callback to remove a drug from the cart items\n  const removeItemHandler = (drugId) => {\n    const newCartDrugs = cartDrugs.filter((eachDrug) => eachDrug.id !== drugId);\n    setCartDrugs(newCartDrugs);\n  };\n\n  //callback to show daily drugs sold\n  const showDailySalesHandler = () => {\n    setShowDailyDrugs(!showDailyDrugs);\n  };\n\n  // callback to close daily sales\n  const closeSalesHandler = () => {\n    const dailyDrugsArray = {\n      sales: 0,\n      id: \"sales\",\n      drugs: [],\n    };\n    axios\n      .put(`${HOSTURL}/sales/update`, dailyDrugsArray)\n      .then((resp) => {\n        setDailyDrugs([]);\n        setTotalSales(0);\n        setCartDrugs([]);\n        setShowDailyDrugs(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //callback to add amount to array of amount\n  const addAmountHandler = (id, amount, quantity) => {\n    updateDrugHandler(id, quantity);\n    const drugIndex = cartDrugs.findIndex((cartItem) => cartItem.id === id);\n    const drugWithIndex = cartDrugs[drugIndex];\n    const newDrug = { ...drugWithIndex, quantity: quantity };\n    const newCartDrugs = [...cartDrugs];\n    newCartDrugs[drugIndex] = newDrug;\n    const newAmountArray = [...amountArray];\n    const updatedAmountArray = newAmountArray.concat(amount);\n    setCartDrugs(newCartDrugs);\n    setAmountArray(updatedAmountArray);\n  };\n\n  //logic to remove drug from drug sold array\n\n  const showModalHandler = (drugId, drugName) => {\n    showModal(true, drugId, drugName);\n  };\n\n  useEffect(() => {\n    let totalCost = 0;\n    amountArray.forEach((amount) => {\n      totalCost += amount;\n    });\n    setTotalCost(totalCost);\n  }, [amountArray]);\n\n  useEffect(() => {\n    axios\n      .get(`${HOSTURL}/sales`)\n      .then((resp) => {\n        const { sales, drugs } = resp.data[0];\n        setTotalSales(sales);\n        setDailyDrugs(drugs);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (showDaily) {\n      const dailyDrugsArray = {\n        sales: totalSales,\n        id: \"sales\",\n        drugs: dailyDrugs,\n      };\n      axios\n        .put(`${HOSTURL}/sales/update`, dailyDrugsArray)\n        .then((resp) => {})\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [showDaily, totalSales, dailyDrugs]);\n\n  const addDrugHandlerToShelf = () => {\n    showModal(false, \"\", \"\");\n    const drug = dailyDrugs.find((eachDrug) => eachDrug.id === id);\n    const price = drug.price;\n    setTotalSales((prevSales) => prevSales - price);\n    const newDailyDrugs = dailyDrugs.filter((eachDrug) => eachDrug.id !== id);\n    setDailyDrugs(newDailyDrugs);\n  };\n\n  return (\n    <div>\n      <Modal addDrug={addDrugHandlerToShelf} />\n      <NavigationBar />\n      <Grid container>\n        <Grid item md={7} className={classes.drugStockGrid}>\n          <Typography variant=\"h5\" className={classes.logo}>\n            DRUG STOCK\n          </Typography>\n          <div className={classes.search}>\n            <Input\n              placeholder=\"Search By Drug Name\"\n              className={classes.search}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => {\n                setLookFor(event.target.value);\n              }}\n              value={lookFor}\n            />\n          </div>\n          {drugsArray && drugsArray.length !== 0 ? (\n            <Card className={classes.card}>\n              <TableContainer className={classes.container}>\n                <Table\n                  stickyHeader\n                  className={classes.table}\n                  aria-label=\"customized table\"\n                >\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell>Drug</StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        <span style={{ marginRight: 100 }}></span>Price\n                      </StyledTableCell>\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    {drugsArray &&\n                      drugsArray.length !== 0 &&\n                      drugsArray\n                        .sort((a, b) => (a.name > b.name ? 1 : -1))\n                        .filter((drug) => {\n                          if (lookFor === \"\") {\n                            return drug;\n                          } else if (\n                            drug.name\n                              .toLowerCase()\n                              .includes(lookFor.toLowerCase())\n                          ) {\n                            return drug;\n                          }\n                        })\n                        .map((drug) => {\n                          if (drug.left == 0) {\n                            return (\n                              <Drug\n                                key={drug.id}\n                                drugName={drug.name}\n                                drugPrice={drug.price}\n                              />\n                            );\n                          } else {\n                            return (\n                              <Drug\n                                key={drug.id}\n                                stocked\n                                drugName={drug.name}\n                                drugPrice={drug.price && drug.price.toFixed(2)}\n                                drugInfo={() => addDrugHandler(drug)}\n                              />\n                            );\n                          }\n                        })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Card>\n          ) : (\n            <h4 style={{ textAlign: \"center\", marginTop: 25 }}>\n              Loading drugs...\n            </h4>\n          )}\n        </Grid>\n\n        <Grid item md={5}>\n          <div className={classes.cartItemGrid}>\n            {\" \"}\n            <Typography variant=\"h5\" className={classes.cartItemTitle}>\n              CART ITEMS\n            </Typography>\n            <hr className={classes.hrStyle} />\n            <Reciept\n              cartItems={cartDrugs}\n              removeItem={removeItemHandler}\n              addAmount={addAmountHandler}\n            />\n            <div className={classes.cartCostDiv}>\n              <Typography variant=\"h5\" className={classes.totalCost}>\n                <span> Total Cost = &#8373; {totalCost.toFixed(2)}</span>\n              </Typography>\n              <div>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  size=\"large\"\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={paymentHandler}\n                  disabled={cartDrugs.length !== amountArray.length}\n                >\n                  ACCEPT PAYMENT\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <hr className={classes.secondHr} />\n      </Grid>\n      <Grid container justifyContent=\"space-around\">\n        <Typography variant=\"h5\">\n          Total Sales = &#8373; {totalSales.toFixed(2)}\n        </Typography>\n\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          onClick={showDailySalesHandler}\n        >\n          Detail Sales\n        </Button>\n\n        <Button variant=\"contained\" size=\"medium\" onClick={closeSalesHandler}>\n          Close Sales\n        </Button>\n      </Grid>\n      <Grid container justifyContent=\"center\">\n        {showDailyDrugs && (\n          <SoldItems drugSold={dailyDrugs} showModal={showModalHandler} />\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(2.9),\n      width: \"30ch\",\n    },\n  },\n\n  formDiv: {\n    position: \"relative\",\n  },\n  stockButton: {\n    position: \"relative\",\n    top: 30,\n    left: 75,\n  },\n}));\n\nconst DrugDetails = (props) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={props.submitStock}\n    >\n      <div className={classes.formDiv}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Drug Name\"\n          style={{ margin: 8, width: \"100%\" }}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={props.name}\n          onChange={props.changeName}\n        />\n        <TextField\n          id=\"outlined-required\"\n          label=\"Price\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={props.price}\n          onChange={props.changePrice}\n        />\n        <TextField\n          id=\"outlined-disabled\"\n          label=\"Expiry Date\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={props.expiry}\n          onChange={props.changeExpiry}\n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Quantity Stocked\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={props.stocked}\n          onChange={props.changeStocked}\n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Quantity Sold\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={props.sold}\n          onChange={props.changeSold}\n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Quantity Left\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={props.left}\n          onChange={props.changeLeft}\n        />\n        {props.newStock ? (\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            className={classes.stockButton}\n            color=\"primary\"\n            type=\"submit\"\n          >\n            ADD NEW STOCK\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            type=\"submit\"\n            className={classes.stockButton}\n          >\n            UPDATE STOCK\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default DrugDetails;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    flexGrow: 1,\n    marginBottom: 20,\n    \"& .MuiAppBar-root\": {\n      backgroundColor: \"black\",\n    },\n\n    \"& .MuiSvgIcon-root\": {\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n\n    \"& img\": {\n      position: \"relative\",\n      left: -10,\n      [theme.breakpoints.down(\"xs\")]: {\n        display: \"none\",\n      },\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  buttonActions: {\n    color: \"white\",\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"75%\",\n    },\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst AdminBar = (props) => {\n  const history = useHistory();\n  const adminLogoutHandler = () => {\n    history.push(\"/home\");\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bolder\" }}>\n              RUDIA CHEMICALS\n            </Typography>\n          </IconButton>\n          <div style={{ flexGrow: 1 }}></div>\n          {\n            <Button\n              className={classes.buttonActions}\n              variant=\"outlined\"\n              onClick={props.addStock}\n            >\n              New Stock\n            </Button>\n          }\n          <Button\n            className={classes.buttonActions}\n            variant=\"outlined\"\n            onClick={adminLogoutHandler}\n          >\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AdminBar;\n","import React, { useState } from \"react\";\nimport Drug from \"./Drug\";\nimport DrugDetails from \"./DrugDetails\";\nimport AdminBar from \"./AdminBar\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Input from \"@material-ui/core/Input\";\nimport { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport * as actionCreators from \"../store/ActionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nimport useDataFetching from \"../custom-hooks/useDataFetching\";\nimport HOSTURL from \"../config\";\nimport { Card, Grid, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: \"100%\",\n    \"& .MuiTableCell-head\": {\n      backgroundColor: \"black\",\n    },\n  },\n  container: {\n    maxHeight: 355,\n  },\n\n  search: {\n    height: 45,\n    width: \"97%\",\n    fontSize: 25,\n    marginTop: 15,\n    paddingLeft: 15,\n  },\n\n  drugStockGrid: {\n    background: \"#ccc\",\n    padding: 15,\n  },\n  logo: {\n    fontSize: 25,\n    fontWeight: \"bolder\",\n    textAlign: \"center\",\n  },\n  card: {\n    marginTop: 25,\n  },\n\n  hrStyle: {\n    border: \"1px solid black\",\n    width: \"85%\",\n  },\n  drugDetailGrid: {\n    position: \"relative\",\n    padding: 10,\n    marginLeft: \"auto\",\n    marginTop: 30,\n    marginRight: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n\n  drugDetailTitle: {\n    fontSize: 25,\n    fontWeight: \"bolder\",\n    textAlign: \"center\",\n  },\n}));\n\nconst Admin = (props) => {\n  const classes = useStyles();\n  // const { drugsArray, setDrugsArray, showDrugs } = useShowDrugs();\n  const [drugsArray, setDrugsArray] = useDataFetching(`${HOSTURL}/drug`);\n\n  const [newStock, setNewStock] = useState(true);\n  const [lookFor, setLookFor] = useState(\"\");\n  // const [drugsArray, setDrugsArray] = useState([]);\n  const [drugId, setDrugId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [qtyStocked, setQtyStocked] = useState(\"\");\n  const [qtySold, setQtySold] = useState(\"\");\n  const [qtyLeft, setQtyLeft] = useState(\"\");\n  const dispatch = useDispatch();\n  const { showSnackBar } = bindActionCreators(actionCreators, dispatch);\n\n  // callback function to get and set drug infomation\n  const getDrugDetails = (drugId) => {\n    const drug = drugsArray.find((eachDrug) => eachDrug.id === drugId);\n    setDrugId(drug.id);\n    setName(drug.name);\n    setPrice(drug.price);\n    setExpiry(drug.expiry);\n    setQtyStocked(drug.stocked);\n    setQtySold(drug.sold);\n    setQtyLeft(drug.left);\n    setNewStock(false);\n  };\n\n  //callback to clear input element to add a new stock\n\n  const newStockHandler = () => {\n    setNewStock(true);\n    setName(\"\");\n    setPrice(\"\");\n    setExpiry(\"\");\n    setQtyStocked(\"\");\n    setQtySold(\"\");\n    setQtyLeft(\"\");\n  };\n\n  //callback to submit or update new stock\n\n  const submitStockHandler = (event) => {\n    event.preventDefault();\n    if (newStock) {\n      const newDrug = {\n        name: name.trim(),\n        price: price,\n        expiry: expiry.trim(),\n        stocked: qtyStocked,\n        sold: qtySold,\n        left: qtyLeft,\n      };\n      console.log(\".......Added Drug..........\");\n      console.log(newDrug);\n      if (\n        name === \"\" ||\n        price === \"\" ||\n        parseFloat(qtyStocked) !== parseFloat(qtyLeft) + parseFloat(qtySold)\n      ) {\n        return showSnackBar(\n          true,\n          \"Wrong / incomplete data values...Please check again\",\n          \"error\"\n        );\n      }\n      axios\n        .post(`${HOSTURL}/drug/stock`, newDrug)\n        .then((resp) => {\n          showSnackBar(true, \"drug added successfully\", \"success\");\n          setName(\"\");\n          setPrice(\"\");\n          setExpiry(\"\");\n          setQtyStocked(\"\");\n          setQtySold(\"\");\n          setQtyLeft(\"\");\n        })\n        .catch((err) => {\n          showSnackBar(true, \"error adding drug\", \"error\");\n        });\n    } else {\n      const updatedDrug = {\n        id: drugId,\n        name: name.trim(),\n        price: price,\n        expiry: expiry.trim(),\n        stocked: qtyStocked,\n        sold: qtySold,\n        left: qtyLeft,\n      };\n      console.log(\".......Updated Drug..........\");\n      console.log(updatedDrug);\n      if (\n        name === \"\" ||\n        price === \"\" ||\n        parseFloat(qtyStocked) !== parseFloat(qtyLeft) + parseFloat(qtySold)\n      ) {\n        return showSnackBar(\n          true,\n          \"Wrong / incomplete data values...Please check again\",\n          \"error\"\n        );\n      }\n      axios\n        .put(`${HOSTURL}/drug/update`, updatedDrug)\n        .then((resp) => {\n          const updatedDrug = resp.data;\n          const drugIndex = drugsArray.findIndex(\n            (drugArrayItem) => drugArrayItem.id === updatedDrug.id\n          );\n          const drugWithIndex = drugsArray[drugIndex];\n          const newDrugWithIndex = {\n            ...drugWithIndex,\n          };\n          const newDrugsArray = [...drugsArray];\n          newDrugsArray[drugIndex] = newDrugWithIndex;\n          setDrugsArray(newDrugsArray);\n          showSnackBar(true, \"drug updated successfully\", \"success\");\n          setDrugId(\"\");\n          setName(\"\");\n          setPrice(\"\");\n          setExpiry(\"\");\n          setQtyStocked(\"\");\n          setQtySold(\"\");\n          setQtyLeft(\"\");\n        })\n        .catch((err) => {\n          showSnackBar(true, \"error updating drug\", \"error\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <AdminBar addStock={newStockHandler} />\n      <Grid container>\n        <Grid item md={6} className={classes.drugStockGrid}>\n          <Typography variant=\"h5\" className={classes.logo}>\n            DRUG STOCK\n          </Typography>\n          <div className={classes.search}>\n            <Input\n              placeholder=\"Search By Drug Name\"\n              className={classes.search}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => {\n                setLookFor(event.target.value);\n              }}\n              value={lookFor}\n            />\n          </div>\n          {drugsArray.length !== 0 ? (\n            <Card className={classes.card}>\n              <TableContainer className={classes.container}>\n                <Table\n                  stickyHeader\n                  className={classes.table}\n                  aria-label=\"customized table\"\n                >\n                  <TableBody>\n                    {drugsArray.length !== 0 &&\n                      drugsArray\n                        .sort((a, b) => (a.name > b.name ? 1 : -1))\n                        .filter((drug) => {\n                          if (lookFor === \"\") {\n                            return drug;\n                          } else if (\n                            drug.name\n                              .toLowerCase()\n                              .includes(lookFor.toLowerCase())\n                          ) {\n                            return drug;\n                          }\n                        })\n                        .map((drug) => (\n                          <Drug\n                            key={drug.id}\n                            drugName={drug.name}\n                            drugInfo={() => getDrugDetails(drug.id)}\n                            stocked\n                          />\n                        ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Card>\n          ) : (\n            <h4 style={{ textAlign: \"center\", marginTop: 25 }}>\n              Loading drugs...\n            </h4>\n          )}\n        </Grid>\n        <Grid item md={6} className={classes.drugDetailGrid}>\n          <Typography variant=\"h5\" className={classes.drugDetailTitle}>\n            DRUG DETAILS\n          </Typography>\n          <hr className={classes.hrStyle} />\n          <DrugDetails\n            submitStock={submitStockHandler}\n            newStock={newStock}\n            name={name}\n            changeName={(event) => setName(event.target.value)}\n            price={price}\n            changePrice={(event) => setPrice(event.target.value)}\n            expiry={expiry}\n            changeExpiry={(event) => setExpiry(event.target.value)}\n            stocked={qtyStocked}\n            changeStocked={(event) => setQtyStocked(event.target.value)}\n            sold={qtySold}\n            changeSold={(event) => setQtySold(event.target.value)}\n            left={qtyLeft}\n            changeLeft={(event) => setQtyLeft(event.target.value)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"./Spinner/Spinner\";\n\nconst useStyles = makeStyles({\n  formStyle: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& .MuiTypography-root\": {\n      marginBottom: 15,\n    },\n  },\n\n  formDiv: {\n    position: \"absolute\",\n    top: \"25%\",\n    left: \"35%\",\n    padding: 25,\n    width: 350,\n  },\n\n  inputStyle: {\n    width: \"100%\",\n    marginBottom: 15,\n  },\n\n  administratorButton: {\n    color: \"red\",\n    textDecoration: \"underline\",\n    marginTop: 10,\n    textTransform: \"lowercase\",\n  },\n});\n\nconst LoginUser = (props) => {\n  const classes = useStyles();\n  const loginRef = useRef();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const switchToAdminLogin = () => {\n    history.push(\"/admin/login\");\n  };\n\n  const salesLoginHandler = (event) => {\n    event.preventDefault();\n    props.loginDetails(username, password);\n  };\n\n  return (\n    <Card className={classes.formDiv} raised>\n      <form className={classes.formStyle} onSubmit={salesLoginHandler}>\n        <Typography variant=\"h4\">SALES</Typography>\n        {props.loginError && (\n          <Typography variant=\"body1\" color=\"error\">\n            wrong username / password\n          </Typography>\n        )}\n        {props.showSpinner && <Spinner />}\n        <TextField\n          className={classes.inputStyle}\n          placeholder=\"enter 'rudia' as the username\"\n          variant=\"filled\"\n          ref={loginRef}\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n\n        <TextField\n          placeholder=\"enter 'chemicals' as the password\"\n          variant=\"filled\"\n          type=\"password\"\n          className={classes.inputStyle}\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\">\n          LOGIN\n        </Button>\n        <Button\n          variant=\"text\"\n          className={classes.administratorButton}\n          onClick={switchToAdminLogin}\n        >\n          login administrator\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\nexport default LoginUser;\n","import React, { useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { useHistory } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner/Spinner\";\nimport HOSTURL from \"../config\";\n\nconst useStyles = makeStyles({\n  formStyle: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& .MuiTypography-root\": {\n      marginBottom: 15,\n    },\n  },\n\n  formDiv: {\n    position: \"absolute\",\n    top: \"25%\",\n    left: \"35%\",\n    padding: 25,\n    width: 350,\n  },\n\n  salesButton: {\n    color: \"red\",\n    textDecoration: \"underline\",\n    marginTop: 10,\n    textTransform: \"lowercase\",\n  },\n\n  inputStyle: {\n    width: \"100%\",\n    marginBottom: 15,\n  },\n});\n\nconst LoginUser = (props) => {\n  const [loginAdminError, setLoginAdminError] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n  const loginRef = useRef();\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const switchToSalesLogin = () => {\n    history.push(\"/\");\n  };\n\n  const adminLoginHandler = (name, pass) => {\n    setShowSpinner(true);\n    setLoginAdminError(false);\n    if (name === \"\" || pass === \"\") {\n      setLoginAdminError(true);\n      setShowSpinner(false);\n      return;\n    }\n    const loginAdmin = { username: name, password: pass };\n    //make an axios call to the database to fetch check user details\n    axios\n      .post(`${HOSTURL}/user/admin/login`, loginAdmin)\n      .then((resp) => {\n        setShowSpinner(false);\n        const { verification } = resp.data;\n\n        if (verification) {\n          setLoginAdminError(false);\n          history.push(\"/admin\");\n        } else {\n          setLoginAdminError(true);\n        }\n      })\n      .catch((error) => {\n        setLoginAdminError(true);\n      });\n  };\n\n  return (\n    <Card className={classes.formDiv} raised>\n      <form\n        className={classes.formStyle}\n        onSubmit={(event) => {\n          event.preventDefault();\n          adminLoginHandler(username, password);\n        }}\n      >\n        <Typography variant=\"h4\">ADMIN</Typography>\n        {loginAdminError && (\n          <Typography variant=\"body1\" color=\"error\">\n            wrong username / password\n          </Typography>\n        )}\n        {showSpinner && <Spinner />}\n        <TextField\n          className={classes.inputStyle}\n          placeholder=\"username\"\n          variant=\"filled\"\n          ref={loginRef}\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n\n        <TextField\n          placeholder=\"password\"\n          variant=\"filled\"\n          type=\"password\"\n          className={classes.inputStyle}\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\">\n          LOGIN\n        </Button>\n        <Button\n          variant=\"text\"\n          className={classes.salesButton}\n          onClick={switchToSalesLogin}\n        >\n          login sales\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\nexport default LoginUser;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactDOM from \"react-dom\";\nimport { useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport * as actionCreators from \"../store/ActionCreators\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst SnackBar = () => {\n  const snackBar = useSelector((state) => state.snackBar);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { showSnackBar } = bindActionCreators(actionCreators, dispatch);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    showSnackBar(false, \"\", \"success\");\n  };\n  const content = (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackBar.open}\n        autoHideDuration={5000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={snackBar.type}>\n          {snackBar.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"snackBar\"));\n};\n\nexport default SnackBar;\n","import { useState } from \"react\";\nimport Home from \"./components/Home\";\nimport Admin from \"./components/Admin\";\nimport SalesLogin from \"./components/SalesLogin\";\nimport AdminLogin from \"./components/AdminLogin\";\nimport HOSTURL from \"./config\";\n\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SnackAlert from \"./components/SnackBar\";\n// import Modal from \"./components/Modal\";\n\nconst App = (props) => {\n  const [salesLogin, setSalesLogin] = useState(false);\n  const [loginSalesError, setLoginSalesError] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const history = useHistory();\n\n  const salesLoginHandler = (name, pass) => {\n    setShowSpinner(true);\n    if (name === \"\" || pass === \"\") {\n      setLoginSalesError(true);\n      setShowSpinner(false);\n      return;\n    }\n    const loginSales = { username: name, password: pass };\n    //make an axios call to the database to fetch check user details\n    axios\n      .post(`${HOSTURL}/user/sales/login`, loginSales)\n      .then((resp) => {\n        setShowSpinner(false);\n        const { verification } = resp.data;\n\n        if (verification) {\n          setSalesLogin(true);\n          setLoginSalesError(false);\n          history.push(\"/home\");\n        } else {\n          setLoginSalesError(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoginSalesError(true);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <SnackAlert />\n      {/* <Modal /> */}\n      <Switch>\n        <Route path=\"/\" exact>\n          <SalesLogin\n            loginDetails={salesLoginHandler}\n            loginError={loginSalesError}\n            showSpinner={showSpinner}\n          />\n        </Route>\n        {salesLogin && (\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n        )}\n\n        <Route path=\"/admin\" exact>\n          <Admin />\n        </Route>\n        <Route path=\"/admin/login\">\n          <AdminLogin />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { snackBarReducer, modalReducer } from \"./store/reducers/Reducers\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rootReducer = combineReducers({\n  snackBar: snackBarReducer,\n  modal: modalReducer,\n});\n\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>{\" \"}\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { SHOW_SNACKBAR, SHOW_MODAL } from \"../Actions\";\n\nexport const snackBarReducer = (\n  state = { open: false, message: \"\", type: \"success\" },\n  action\n) => {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n      return {\n        ...state,\n        open: action.showSnack,\n        message: action.messageSnack,\n        type: action.typeSnack,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const modalReducer = (\n  state = { open: false, id: \" \", name: \"\" },\n  action\n) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        open: action.openModal,\n        id: action.drugId,\n        name: action.drugName,\n      };\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}